name: Release and Publish

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install uv and setup Python version
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.26"

    - name: Set up Python
      run: uv python install 3.10

    - name: Setup uv venv
      run: |
        uv venv && source .venv/bin/activate && make install_dev_requirements

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        echo "VERSION=$(awk -F'"' '/^version/ {print $2}' pyproject.toml)" >> $GITHUB_ENV

    # - name: Create tag
    #   run: |
    #     git config user.name "Sacha Lasry"
    #     git config user.email "lasry.sacha@gmail.com"
    #     git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
    #     git push origin "v${{ env.VERSION }}"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: "v${{ env.VERSION }}"
        body: ${{ steps.extract-release-notes.outputs.release_notes }}
        release_name: "Release ${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      run: |
        uv build

    - name: Publish to PyPI
      run: |
        uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
