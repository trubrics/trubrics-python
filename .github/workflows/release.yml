name: Release and Publish

# on:
#   push:
#     branches:
#       - main

on: [push]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install uv and setup Python version
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.26"

    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}

    - name: Setup uv venv
      run: |
        uv venv && source .venv/bin/activate && make install_dev_requirements

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        echo "VERSION=$(awk -F'"' '/^version/ {print $2}' pyproject.toml)" >> $GITHUB_ENV

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ env.VERSION }}

    # - name: Create tag
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
    #   # git push origin "v${{ env.VERSION }}"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Push Version Tags
    #   uses: ovsds/push-version-tags-action@v1
    #   with:
    #     version: v${{ env.VERSION }}


    # - name: Push tag
    #   uses: actions-ecosystem/action-push-tag@v1
    #   with:
    #     tag: v${{ env.VERSION }}

    # - name: Bump version and push tag
    #   uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
    #     WITH_V: true

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "Release ${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      run: |
        uv build

    - name: Publish to PyPI
      # env:
      #   TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #   TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
