name: Release and Publish

# on:
#   push:
#     branches:
#       - main

on: [push]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install uv and setup Python version
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.26"

    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}

    - name: Setup uv venv
      run: |
        uv venv && source .venv/bin/activate && make install_dev_requirements

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        echo "VERSION=$(awk -F'"' '/^version/ {print $2}' pyproject.toml)" >> $GITHUB_ENV

    - name: Create tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "Release ${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      run: |
        uv build

    - name: Publish to PyPI
      # env:
      #   TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #   TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        uv publish
